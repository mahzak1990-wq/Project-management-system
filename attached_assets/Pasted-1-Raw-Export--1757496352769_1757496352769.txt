1 — أولويات التنفيذ الآن (بترتيب الأثر)

اطلب من ريبليت تصدير ملف خام (Raw Export) من مصدر الواجهة الآن (CSV أو Excel) يحتوي على البيانات التي تقرأها الواجهة في نفس لحظة الفشل. الملف يجب أن يحتوي على: ProjectID, SheetName, RawRowNumber, RawColumnHeader, RawCellValue.
لماذا: نحتاج للتأكد ما الذي تقرأه الواجهة فعلاً — هل هو فارغ أم خطأ في التحويل أم خطأ في الربط.

اطلب عينة مسحوبة يدوياً من الصفوف 17..22 لكل مشروع متأثر (نسخة copy-paste): أعطهم قالب بسيط لتعبئته (جدول) يحتوي على: ProjectID | SheetName | CellRef (مثل B17) | RawValue (كما يظهر في شريط الصيغة) | Cell Format (مثال: General/Date/Text) | LastModified(File).
لماذا: يساعدنا نعرف إن المشكلة في المصدر (قيم فارغة/رموز/نص) أو في عرض الواجهة.

اطلب لوجات الاستيراد (Ingestion / ETL logs): سجّلوا كل عملية تحميل ملف من المصدر، يجب أن تتضمن: timestamp، file path/name، sheet name، rows read count، parse errors (إن وجدت) مع رسالة الخطأ الكاملة.
لماذا: لو كان هناك خطأ أثناء القراءة سيظهر هنا.

اطلب استجابة الـ API/Endpoint (إذا الواجهة تجلب بيانات عبر API): نسخة من الـ JSON أو payload الذي ترجع للصفحة Resources.
لماذا: إن كان API يعيد مصفوفة فارغة فالمشكلة في الطبقة الخلفية، وإن كان يعيد قيم فالمشكلة في العرض (frontend).

2 — فحوصات يدوية يجب أن تقومون بها على ملف المصدر (Excel) — نفّذوها وركّزوا على التفاصيل التالية

اطلب من مهندس ريبليت تنفيذ كل بند وإرسال نتائج الخطوة كلّها (لقطة شاشة + ملف تصدير).

تأكيد اسم الورقة (Sheet name) ومسار الملف — تأكدوا أن الواجهة تقرأ الورقة الصحيحة داخل الملف الصحيح (غالباً أخطاء اسم الورقة تسبّب قراءات فارغة).

عرض الصفوف 17..22 بالـ Formula Bar — افتحوا كل خلية من هذه الصفوف واضغطوا على شريط الصيغة لعرض المحتوى الحقيقي (للتأكد من عدم وجود apostrophe أو مسافات خفية أو أحرف خاصة). أرسلوا لقطة شاشة لكل صف.

تأكدوا من تنسيق الخلايا (Format Cells): هل خلية التاريخ مُنسّقة كـ Date أم Text؟ هل خلايا العمالة مُصنفة كـ Number أم Text؟ اعطونا نتيجة لكل خلية (Date/Number/Text).

ابحثوا عن رموز بديلة مثل - أو — أو N/A أو فراغات غير مرئية (non-breaking spaces). إن وُجدت استبدلوها مؤقتاً بقيمة واضحة (مثلاً 0 أو فارغ منطقي) ثم أعدوا اختبار القراءة.

تأكدوا من أن الصفوف ليست مدموجة (Merged Cells) في النطاق المستهدف — الخلايا المدموجة قد تسبب فشل القراءة.

تأكدوا من عدم وجود صيغ مرجعية (#REF!) أو أخطاء في الخلايا في الصفوف المستهدفة.

تحقق من توافق عدد الأعمدة: العدد المتوقع من التواريخ (أعمدة) في صف 17 أو 20 يجب أن يطابق عدد الأعمدة المعروضة في الواجهة. إن اختلفت الأعداد سجّلوا الفرق.

3 — كيف يتعاملون مع مشكلة التواريخ (مبدأيّاً وبدون كود)

تأكيد معيار التاريخ في المصدر: اسألهم ما هو التنسيق المعتمد (DD-MM-YYYY أو YYYY-MM-DD) وما هو الـ Locale (English/Arabic) لأن اختلاف الـ Locale يغيّر تفسير التواريخ.

إظهار مقارنة صريحة: اطلبوا ملفًا بسيطًا فيه عمودين: التاريخ في المصدر وعمود ثانٍ يكتب “IsValidDate: Yes/No” وعمود ثالث “NormalizedDate” (التاريخ بعد التأكد). هذه الخانات لا تتطلب كود منكم — يمكن أن يفعلها المهندس يدوياً على عيّنة.

منطق اختيار أقرب تاريخ: اطلبوا من ريبليت أن يزودكم بسجل (باللوج) لكل أسبوع فيه: targetThursday, candidateDates (من صف 17) وchosenDate وreason (closest/exact). هذا يبيّن لماذا اختار النظام تاريخًا معينًا.

اتفاق قاعدة التعادل: اذكروا بوضوح: في حال تعادل المسافة بين تاريخين نختار (اختروا واحد): التاريخ اللاحق (recommended) أو السابق — اطلبوا منهم توثيق القرار وتطبيقه.

4 — فحص الربط/المطابقة (Mapping)

اطلبوا ملف إعدادات الربط (Mapping Config) الذي تستخدمه الواجهة: ما هي أسماء الأعمدة التي تبحث عنها الواجهة لربطها (مثال: "ProjectID", "Date", "PlannedLabor", "PlannedEquipment")؟

تأكدوا أنه يتم الربط على أساس معرف ثابت (ProjectID) وليس على أساس الاسم الحر لأن الأسماء قد تتغيّر. إذا الربط حالياً يعتمد على موقع الصف/رقم صف — اطلبوا توثيق ذلك.

اطلبوا اختباراً بسيطاً: خذوا مشروعاً واحداً واضبطوا في المصدر قيمة مميّزة (مثلاً ضعوا رقم 9999) في صف 21 للعمالة ثم أرسلوه، واطلبوا من ريبليت أن يخبركم إن ظهرت هذه القيمة في الواجهة — هذا يؤكد قناة الربط.

5 — فحوصات الأداء والتخزين المؤقت (Caching)

تأكدوا من أن الواجهة لا تعرض نسخة مخزنة (cache) قديمة: اطلبوا من الفريق أن يعملوا “Reload from source” أو تعطيل الكاش مؤقتًا، ثم أعيدوا اختبار.

اطلبوا خطوات إعادة التحميل (clear cache) للمستخدم: مثل فتح الصفحة في نافذة Incognito أو Ctrl+F5 أو تغير اسم الملف المؤقت لإجبار الواجهة على قراءة نسخة جديدة.

اطلبوا من الفريق تزويدكم بوقت آخر تحميل ناجح (timestamp of last successful ingestion) ومقارنته مع وقت آخر تعديل الملف.

6 — سجّل الأخطاء المطلوب من ريبليت إرساله لكم (بالصيغة هذه)

اطلبوا منهم لوج واحد أو ملف CSV يحتوي على الأعمدة التالية لكل مشروع/تحميل:

Timestamp

ProjectID

SheetName

SourceFileName (path)

RowsReadCount

RowsWithParseErrors

ColumnNameWithError

CellRef (مثال B21)

RawValue

ErrorDescription (مثال: “date parse failed”, “non-numeric”, “empty”)

ActionTaken (مثال: “used closest date 2024-08-08”, “replaced '-' with 0”)

هذا التنسيق يجعل من السهل تحليل أين الخلل.

7 — خطوات تصحيحية فورية يمكنهم تنفيذها دون تغييرات كبيرة في النظام

عمل تنظيف (one-time) للملف المصدر: استبدال - و— وN/A بـ 0 أو فراغ منطقي، التأكد من تحويل الخلايا النصية إلى القيم الصحيحة.

استخدام Named Ranges أو Excel Table للصفوف 17..22 بحيث الربط يصبح على أسماء ثابتة وليس أرقام صفوف.

تفعيل آلية fallback عند عدم وجود قيمة: عرض صفر مؤقتًا مع تسجيل سبب النقص بدلاً من إظهار جدول فارغ.

تفعيل لوج مفصّل في كل عملية تحميل حتى لو نجحت العملية — هذا يسهل النيابة عن الخطأ في المرات القادمة.

8 — ملف تقرير دورية مطلوب من ريبليت بعد كل محاولة تصحيح

اطلبوا منهم إرسال تقرير قصير بعد كل محاولة إصلاح يتضمن:

الإجراءات التي نفّذّوها (قائمة محددة).

لوجات التحميل بعد الإصلاح (كما في البند 6).

لقطة شاشة من الواجهة توضح ما ظهر بعد الإصلاح.

إن لم تُحل المشكلة: وصف دقيق لأي فارق بين البيانات في المصدر والبيانات المعروضة (مثال: “في المصدر قيمة B21=231 وواجهة عرضت 0”).

9 — معايير قبول (Acceptance criteria) — يجب أن توافق عليها قبل إغلاق التذكرة

لكل مشروع: القيم في الجدولين (الشهري والأسبوعي) يجب أن تطابق المصدر (الصفوف 17..22) أو تُظهر سبب منطقي ومسجّل لتغيّرها.

عند عدم تطابق تاريخ Thursday، يجب أن يُسجل اختيار أقرب تاريخ ويُعرض في الواجهة توضيح مختصر.

الواجهة لا تظهر صفوف فارغة بدون تسجيل السبب في اللوج.

بعد رفع ملف مصدر معدل، الضغط على "تحديث" ينعكس فوراً على الواجهة (بدون رجوع لكاش قديم).

10 — رسالة جاهزة لريبليت (انسخوا وأرسلوها لهم مع المرفقات المطلوبة)

مرحباً فريق ريبليت،
المشكلة مستمرة رغم الفحوصات السابقة. نحتاج منكم تنفيذ الخطوات التالية وإرسال النتائج بصيغة مرتّبة:

تصدير Raw Export (CSV/Excel) لكل البيانات التي تقرأها الواجهة الآن (ProjectID, SheetName, RawRowNumber, RawColumnHeader, RawCellValue).

إرسال عيّنة يدوية لصفوف 17..22 لكل مشروع متأثر (ProjectID, CellRef, RawValue كما في Formula Bar, Cell Format, LastModified).

إرسال لوج الاستيراد (ingestion logs) بالحقول: Timestamp, file path, rows read, parse errors, error messages.

إرسال الـ API payload (JSON) الذي ترجع به الواجهة عند طلب صفحة Resources.

اطبعوا سجل لكل محاولة إصلاح يوضح بالضبط الإجراءات التي نُفذت، والنتيجة (لقطات شاشة من الواجهة + لوج).

رجاءً لا تُجري تغييرات دائمة قبل إرسال الملفات أعلاه — نحتاج أن نحلّل البيانات الأولية.
أرفقنا هنا أمثلة لمشروعات متأثرة (ProjectID list) — ننتظر الملفات واللوجات لتحليلها وإعطائكم تقرير مفصل.
شكراً.

11 — إذا استمر التعطّل بعد كل ما سبق — خطة بديلة للالتفاف (workaround)

اطلبوا من ريبليت أن يوفّر ميزة “Upload Sanitized CSV”: أنتم تجهزون ملفًا مُنظفًا (محدّد الأعمدة: ProjectID, Date, PlannedLabor, PlannedEquipment) هم يرفعونه ويعرضونه مؤقتاً إلى أن يصلحوا القناة الأصلية.

أطلبوا جلسة مشاركة شاشة (screen-share) لمدة قصيرة مع مهندس ريبليت يمر معكم خطوة بخطوة على ملفكم والواجهة حتى تُرى المشكلة مباشرة — غالباً يُكشف الخطأ فوراً.

إن لم ينجح كل شيء: اطلبوا من الفريق نسخة احتياطية من الكود/إعدادات الربط ليتم تحليلها داخلياً أو من طرف ثالث مختص.