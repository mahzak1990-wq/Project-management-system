تنظيم ملف الإكسل وتأكيد البنية

قبل كتابة أي منطق، تأكد أن شيت الإكسل منظم كما يلي (أرقام الصفوف هنا هي أرقام الصفوف في Excel):

الجدول الشهري

صف رقم 20: يحتوي التواريخ (كل تاريخ في خلية عبر الأعمدة؛ عادة تبدأ من العمود B أي بعد العمود الذي يحوي تسميات الصفوف).

صف رقم 21: تحت كل تاريخ يوجد رقم عدد العمالة الموافق لذلك التاريخ.

صف رقم 22: تحت كل تاريخ يوجد رقم عدد المعدات/غير العمالة الموافق لذلك التاريخ.

الجدول الأسبوعي

صف رقم 17: يحتوي التواريخ الأسبوعية (كل تاريخ في خلية عبر الأعمدة).

صف رقم 18: تحت كل تاريخ موجود عدد العمالة للأسبوع.

صف رقم 19: تحت كل تاريخ موجود عدد المعدات للأسبوع.

ملاحظة مهمة: إذا كانت الخلايا في الشيت نصية (مثلاً "1-12-2025") أو تاريخ Excel (رقم تاريخي)، يجب أن يتعامل الكود مع كلا الحالتين بتحويل الخلية إلى قيمة تاريخ قابلة للمقارنة.

3. تحميل الشيت وتهيئة البيانات (مبدأياً)

عند بدء التطبيق، حمل الشيت مرة واحدة في الذاكرة لتسريع الاستعلامات.

خزّن صفوف التواريخ والصفوف المقابلة للعمالة والمعدات كقوائم مرتبة تمثل الأعمدة (تجاهل العمود الأول إذا هو فقط عناوين/تسميات).

جهز دالة/آلية لإعادة تحميل الشيت يدوياً أو تلقائياً عندما تعدل الملف (حتى لا تحتاج إعادة تشغيل الخادم يدوياً كل مرة).

4. منطق مطابقة التواريخ للـ جدول الموارد الشهري

الهدف: عند ورود تاريخ (مثلاً من الواجهة) أن تبحث في صف تواريخ الجدول الشهري (صف 20) عن خلية تطابق الشهر والسنة فقط (تجاهل اليوم).

طريقة العمل بالخطوات:

استقبل التاريخ المطلوب (مثلاً: 1-12-2025 أو 2025-12-01).

استخرج منه الشهر والسنة.

مرّ على كل خلية في صف التواريخ الشهري: حوّل كل خلية إلى تاريخ صالح إن أمكن، ثم قارن الشهر والسنة فقط مع التاريخ المطلوب.

عند العثور على تطابق الشهر والسنة، خذ القيمتين الموجودتين في نفس العمود: قيمة صف 21 = عدد العمالة، وقيمة صف 22 = عدد المعدات.

إذا لم يوجد أي تطابق في كامل صف التواريخ، اعتبر النتيجة "لا بيانات" أو أعد صفراً بحسب اختيارك (توضيح أدناه عن القيم الصفرية والفراغات).

حافظ على القيمة كما هي: إذا كانت الخلية في الشيت تحتوي 0 فعرض 0 — لا تفسرها أو تفترض قيمة بديلة.

5. منطق مطابقة التواريخ للـ جدول الموارد الأسبوعي

الهدف: عند ورود تاريخ أسبوعي، أن تجده في صف تواريخ الجدول الأسبوعي (صف 17) بأقرب تاريخ قبله أو بعده. إذا كان التاريخ في منتصف المسافة بالضبط بين تاريخين، فاختر التاريخ الذي بعده (أي الأبعد في الاتجاه الإيجابي).

طريقة العمل بالخطوات:

استقبل التاريخ المطلوب (مثلاً: 18-12-2025).

مرّ على كل خلية في صف التواريخ الأسبوعي: حوّلها لتاريخ صالح إن أمكن.

لكل تاريخ في الصف احسب الفرق المطلق بعدد الأيام بين تاريخ الخلية والتاريخ المطلوب.

احتفظ بالتاريخ الذي يعطي أصغر فرق (أي الأقرب).

إذا وجد فرقان متساويان بين تاريخين (موقف "بالضبط في المنتصف") اختر التاريخ الذي هو بعد التاريخ المطلوب (tie-breaker: choose the next/later date).

عندما تحدد العمود الأقرب، خذ القيمتين في ذلك العمود: صف 18 → عدد العمالة، صف 19 → عدد المعدات.

إن لم توجد تواريخ صالحة مطابقة أو قريبة، اعرض صفر أو رسالة مناسبة حسب سياستك.

6. قواعد التعامل مع القيم الفارغة أو غير الرقمية

لو الخلية تحتوي رقم 0 فعلاً (صف 18/19 أو 21/22) — اعرض 0 في الواجهة (لا تفترض قيمة أخرى).

لو الخلية فارغة: أنسب خيارين افتراضيين — إمّا عرض 0 أو عرض رسالة "غير متوفرة". اختر واحداً وثبته في المواصفات. (للكود العملي، يفضل تحويل الفارغات إلى 0 لتفادي أخطاء حسابية، لكن يمكنك تمييزها في الواجهة إن أردت).

لو خلية التاريخ غير قابلة للتحويل، تجاهلها عند المقارنة.

7. واجهة الاتصال بين الواجهة (Resources UI) والخادم

أنشئ نقطتي وصول (API) يمكن للواجهة استدعاؤهما: واحدة لطلب بيانات شهرية وأخرى لطلب بيانات أسبوعية.

يجب أن يستقبل كل طلب تاريخ المطلوب (صيغة تاريخ موحدة مثل YYYY-MM-DD أو أي صيغة متفق عليها).

الخادم يجب أن يرد بصيغة بسيطة (مثلاً كـ JSON) تحتوي على قيمتين رئيسيتين: قيمة العمالة وقيمة المعدات، بالإضافة لحالة الطلب (نجاح/خطأ أو رسالة توضيحية).

الواجهة تستدعي هذه النقاط عند الحاجة وتعرض الأرقام في صفحة الموارد تحت التاريخ المطلوب.

8. تنسيق التاريخ والاختبارات

اتفق على صيغة تاريخ مدخلة واحدة من الواجهة (أنسب صيغة: YYYY-MM-DD لأنّها واضحة وغير معتمدة على إعدادات لغة).

اكتب خطة اختبارية تتضمن أمثلة حقيقية:

مثال شهري: المستخدم يطلب ديسمبر 2025 → الخادم يبحث عن صف 20 حيث الشهر=12 والسنة=2025 → يعيد صف 21 و22 للعمود المطابق.

مثال أسبوعي: المستخدم يطلب 18-12-2025، وفي الشيت هناك تاريخان 14-12-2025 و21-12-2025 → تحسب الفروق (4 أيام و3 أيام) → تختار 21-12-2025 لأنّ الفرق أصغر → تعطي صف 18 و19 لذلك العمود.

مثال tie-breaker: إذا الفروق متساوية (مثلاً الطلب 17، والتواريخ 14 و20)، طبق قاعدة اختيار التاريخ الأبعد بعد التاريخ المطلوب.

حالة لا تطابق: لو لا تواريخ صالحة في صف التواريخ، قم بإرجاع 0 أو رسالة "لا بيانات".

9. تحسينات عملية وأداء

تحميل/تخزين مؤقت (Caching): لا تعيد قراءة ملف الإكسل من القرص عند كل استعلام؛ حمّله مرة واحتفظ بالبيانات في الذاكرة. إذا قمت بتعديل ملف الإكسل في Replit، أضف طريقة لإعادة تحميل البيانات (reload) أو كشف التغيير تلقائياً.

التحقق من صحة المدخلات: تأكد أن التاريخ الوارد صالح قبل محاولة المقارنة، وأعطِ رسالة خطأ واضحة في حالته غير صالحة.

سجل أخطاء (Logging): خزّن أخطاء التحويل وإشعارات التحميل لتسهيل تتبع المشاكل.

التعامل مع تنسيقات تاريخ متنوعة: اضبط آلية تحويل التاريخ لتقبل صيغ شائعة (DD-MM-YYYY, YYYY-MM-DD) وتحويل تواريخ Excel إن وُجدت.

10. نشر التطبيق على Replit

بعد التأكد محلياً، شغّل الخادم في Replit وسيعرض لك Replit رابطًا عاماً لتطبيقك.

اجعل الواجهة الأمامية تتصل بذلك الرابط لنقاط الـ API الخاصة بالـ monthly و weekly.

اختبر استدعاءات من الواجهة وتأكد أن القيم تُعرض كما في الشيت.

11. قائمة فحص نهائية (Checklist)

 تحميل ملف الإكسل داخل المشروع واسم الملف معروف.

 التحقق من أن صفوف التواريخ والبيانات في الشيت مطابقة للأرقام المذكورة (17،18،19،20،21،22).

 آلية لتحويل القيم النصية إلى تواريخ قابلة للمقارنة.

 دالتان منطقيتان: واحدة للمطابقة الشهرية (مقارنة شهر+سنة)، وأخرى للمطابقة الأسبوعية (أقرب تاريخ + tie-breaker للـ later).

 سياسة واضحة للفراغات والأصفار: الأصفار تُعرض كما هي.

 واجهة برمجية (API) للواجهة الأمامية تستقبل تاريخاً وترد بعدد العمال والمعدات.

 اختبارات يدوية لسيناريوهات متعددة (شهرية، أسبوعية، حالات وسط، عدم وجود بيانات).

 مراقبة/إعادة تحميل للشيت عند التعديل.